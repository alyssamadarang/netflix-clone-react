{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alyssamadarang/netflix-clone/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const base_url = \"https://image.tmdb.org/t/p/original/\"; // A snippet of code which runs based on specific condition/variable\n\n  useEffect(() => {\n    // everytime row will load, this snippet of code will run\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      console.log(request);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData(); // if [], run once when the row load (on page load), and don't run again\n    // if you have a variable passed from outside the block, [fetchUrl] --> dependency\n  }, [fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Youtube, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/alyssamadarang/netflix-clone/src/Row.js"],"names":["React","useState","useEffect","axios","Youtube","Row","title","fetchUrl","isLargeRow","movies","setMovies","base_url","fetchData","request","get","console","log","data","results","table","map","movie","poster_path","backdrop_path","name","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAb,EAA8C;AAAA;;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMU,QAAQ,GAAG,sCAAjB,CAF4C,CAI5C;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,mBAAeU,SAAf,GAA2B;AACzB,YAAMC,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUP,QAAV,CAAtB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAH,MAAAA,SAAS,CAACG,OAAO,CAACI,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOL,OAAP;AACD;;AACDD,IAAAA,SAAS,GARK,CASd;AACA;AACD,GAXQ,EAWN,CAACL,QAAD,CAXM,CAAT;AAaAQ,EAAAA,OAAO,CAACI,KAAR,CAAcV,MAAd;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGG,MAAM,CAACW,GAAP,CAAYC,KAAD,iBACV;AAEE,QAAA,SAAS,EAAG,eAAcb,UAAU,IAAI,kBAAmB,EAF7D;AAGE,QAAA,GAAG,EAAG,GAAEG,QAAS,GACfH,UAAU,GAAGa,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aACxC,EALH;AAME,QAAA,GAAG,EAAEF,KAAK,CAACG;AANb,SACOH,KAAK,CAACI,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF,eAeE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAvCQpB,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n\n  // A snippet of code which runs based on specific condition/variable\n  useEffect(() => {\n    // everytime row will load, this snippet of code will run\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      console.log(request);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n    // if [], run once when the row load (on page load), and don't run again\n    // if you have a variable passed from outside the block, [fetchUrl] --> dependency\n  }, [fetchUrl]);\n\n  console.table(movies);\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      <div className=\"row__posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      <Youtube />\n    </div>\n  );\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}